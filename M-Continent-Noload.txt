let
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("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", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#"Country|Continent" = _t]),
    #"Split Column by Delimiter" = Table.SplitColumn(Source, "Country|Continent", Splitter.SplitTextByDelimiter("|", QuoteStyle.Csv), {"Country", "Continent"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"Country", type text}, {"Continent", type text}}),
    #"Trimmed Text" = Table.TransformColumns(#"Changed Type",{{"Country", Text.Trim, type text}, {"Continent", Text.Trim, type text}}),
    #"Capitalized Each Word" = Table.TransformColumns(#"Trimmed Text",{{"Continent", Text.Proper, type text}})
in
    #"Capitalized Each Word"
